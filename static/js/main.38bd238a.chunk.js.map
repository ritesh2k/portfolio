{"version":3,"sources":["fonts/EncodeSansSemiExpanded-Medium.ttf","components/Header.js","components/Intro.js","components/Skills.js","components/Education.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Intro","Fragment","Skills","class","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","Education","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oKAAAA,EAAOC,QAAU,IAA0B,2D,wECc5BC,G,UAZA,WACb,OACE,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,gCACb,4CACA,sDC0BOC,EAjCD,WACZ,OACE,kBAAC,IAAMC,SAAP,KACE,6BAASF,UAAU,QACjB,4CACA,wEAC4C,6BAD5C,6CAIF,iCACE,0CACA,iDACA,uDACA,oFACA,wJAIA,gDATF,IAS4B,2EAC1B,uDACA,4BACE,2EACA,kEACA,oFACA,0EAEF,4CACA,mICsCOG,EAjEA,WACb,OACE,kBAAC,IAAMD,SAAP,KACE,6BAASF,UAAU,QACjB,sCACA,wCACA,yBAAKI,MAAM,YACT,yBACEA,MAAM,4CACNC,KAAK,cACLC,MAAO,CAAEC,MAAO,OAChBC,gBAAc,KACdC,gBAAc,IACdC,gBAAc,SAGlB,0CACA,yBAAKN,MAAM,YACT,yBACEA,MAAM,4CACNC,KAAK,cACLC,MAAO,CAAEC,MAAO,OAChBC,gBAAc,KACdC,gBAAc,IACdC,gBAAc,SAGlB,oCACA,yBAAKN,MAAM,YACT,yBACEA,MAAM,4CACNC,KAAK,cACLC,MAAO,CAAEC,MAAO,OAChBC,gBAAc,KACdC,gBAAc,IACdC,gBAAc,SAGlB,mCACA,yBAAKN,MAAM,YACT,yBACEA,MAAM,4CACNC,KAAK,cACLC,MAAO,CAAEC,MAAO,OAChBC,gBAAc,KACdC,gBAAc,IACdC,gBAAc,SAGlB,mCACA,yBAAKN,MAAM,YACT,yBACEA,MAAM,4CACNC,KAAK,cACLC,MAAO,CAAEC,MAAO,OAChBC,gBAAc,KACdC,gBAAc,IACdC,gBAAc,YC5CXC,EAbG,WAChB,OACE,kBAAC,IAAMT,SAAP,KACE,6BAASF,UAAU,QACjB,yCACA,qEACA,yCACA,gFCiBOY,MAlBf,WACE,OACE,yBAAKZ,UAAU,sBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mCACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,SACb,kBAAC,EAAD,MACA,kBAAC,EAAD,UCLUa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.38bd238a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EncodeSansSemiExpanded-Medium.8462e5e5.ttf\";","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"row border-bottom\">\r\n      <div className=\"col-5 profile-img\" />\r\n      <div className=\"col-7 bg-dark text-white p-3\">\r\n        <h2>Ritesh Kumar</h2>\r\n        <h3>Frontend Developer</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nconst Intro = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"pb-3\">\r\n        <h4>Introduction</h4>\r\n        <p>\r\n          Hi, I'm Ritesh. I'm a frontend developer. <br /> I love react, HTML, CSS and javaScript.\r\n        </p>\r\n      </section>\r\n      <section>\r\n        <h4>Experience</h4>\r\n        <h6>Software Engineer</h6>\r\n        <small>July 2019 to present</small>\r\n        <h6>Project Title: Recruitment Process Outsourcing (RPO)</h6>\r\n        <p>\r\n          Currently working on a recruitment process outsourcing website used to manage and track recruiter and vendor\r\n          performance.\r\n        </p>\r\n        <h6>TECHNOLOGY USED:</h6> <ul>React, Ruby on Rails, MySql, Babel, Webpack</ul>\r\n        <h6>Responsibilitiesâ€‹:</h6>\r\n        <ul>\r\n          <li>Designed responsive responsive and fast UI.</li>\r\n          <li>Worked on various types of graphs.</li>\r\n          <li>Integrated api2pdf API to convert .doc files to pdf.</li>\r\n          <li>Integrated in-house and third party APIs.</li>\r\n        </ul>\r\n        <h6>Environment:</h6>\r\n        <p> HTML, CSS3, JavaScript, JSON, Reactjs, ES6, Ruby on Rails, Bootstrap, Visual studio Editor, GIT.</p>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import React from \"react\";\r\nconst Skills = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"pb-3\">\r\n        <h4>Skills</h4>\r\n        <h6>React.js</h6>\r\n        <div class=\"progress\">\r\n          <div\r\n            class=\"progress-bar progress-bar-striped bg-dark\"\r\n            role=\"progressbar\"\r\n            style={{ width: \"70%\" }}\r\n            aria-valuenow=\"10\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n          />\r\n        </div>\r\n        <h6>Javascript</h6>\r\n        <div class=\"progress\">\r\n          <div\r\n            class=\"progress-bar progress-bar-striped bg-dark\"\r\n            role=\"progressbar\"\r\n            style={{ width: \"65%\" }}\r\n            aria-valuenow=\"10\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n          />\r\n        </div>\r\n        <h6>HTML</h6>\r\n        <div class=\"progress\">\r\n          <div\r\n            class=\"progress-bar progress-bar-striped bg-dark\"\r\n            role=\"progressbar\"\r\n            style={{ width: \"50%\" }}\r\n            aria-valuenow=\"10\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n          />\r\n        </div>\r\n        <h6>Git</h6>\r\n        <div class=\"progress\">\r\n          <div\r\n            class=\"progress-bar progress-bar-striped bg-dark\"\r\n            role=\"progressbar\"\r\n            style={{ width: \"50%\" }}\r\n            aria-valuenow=\"10\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n          />\r\n        </div>\r\n        <h6>CSS</h6>\r\n        <div class=\"progress\">\r\n          <div\r\n            class=\"progress-bar progress-bar-striped bg-dark\"\r\n            role=\"progressbar\"\r\n            style={{ width: \"30%\" }}\r\n            aria-valuenow=\"10\"\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n          />\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React from \"react\";\r\nconst Education = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"py-3\">\r\n        <h4>Education</h4>\r\n        <h6>Master in Computer Application (2018)</h6>\r\n        <em>7.25 CGPA</em>\r\n        <p>Babasaheb Bhimrao Ambedkar University, Lucknow</p>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Intro from \"./components/Intro\";\nimport Skills from \"./components/Skills\";\nimport Education from \"./components/Education\";\n\nfunction App() {\n  return (\n    <div className=\"container bg-light\">\n      <Header />\n      <div className=\"row py-5\">\n        <div className=\"col-5 text-right mycontent-left\">\n          <Intro />\n        </div>\n        <div className=\"col-7\">\n          <Skills />\n          <Education />\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './fonts/EncodeSansSemiExpanded-Medium.ttf'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}